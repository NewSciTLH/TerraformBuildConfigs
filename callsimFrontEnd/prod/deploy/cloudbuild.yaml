# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


steps:
    - id: 'Docker Build'
      name: 'gcr.io/cloud-builders/docker'
      args: ['build', '-t', 'gcr.io/$PROJECT_ID/call_sim_frontend:$COMMIT_SHA', '-t', 'gcr.io/$PROJECT_ID/call_sim_frontend:$BRANCH_NAME', '.']

    - id: 'Docker Publish to GCR'
      name: 'gcr.io/cloud-builders/docker'
      args: ['push', 'gcr.io/$PROJECT_ID/call_sim_frontend']

    - id: 'Show Branch Name'
      name: 'alpine'
      entrypoint: 'sh'  
      args: 
      - '-c'
      - | 
          echo "***********************"
          echo "$BRANCH_NAME"
          echo "***********************"
    
    - id: 'Terraform Init'
      name: 'hashicorp/terraform:0.12.28'
      entrypoint: 'sh'
      args: 
      - '-c'
      - |
          if [ -d "environments/$BRANCH_NAME/" ]; then
            cd environments/$BRANCH_NAME
            terraform init
          else
            for dir in environments/*/
            do 
              cd ${dir}   
              env=${dir%*/}
              env=${env#*/}
              echo ""
              echo "*************** TERRAFORM INIT ******************"
              echo "******* At environment: ${env} ********"
              echo "*************************************************"
              terraform init || exit 1
              cd ../../
            done
          fi 
    
    # [START tf-plan]
    - id: 'Terraform Plan'
      name: 'hashicorp/terraform:0.12.28'
      entrypoint: 'sh'
      args: 
      - '-c'
      - | 
          if [ -d "environments/$BRANCH_NAME/" ]; then
            cd environments/$BRANCH_NAME
            terraform plan -var "container_image=gcr.io/$PROJECT_ID/call_sim_frontend:$COMMIT_SHA" -var "project=$PROJECT_ID"
          else
            for dir in environments/*/
            do 
              cd ${dir}   
              env=${dir%*/}
              env=${env#*/}  
              echo ""
              echo "*************** TERRAFOM PLAN ******************"
              echo "******* At environment: ${env} ********"
              echo "*************************************************"
              terraform plan || exit 1
              cd ../../
            done
          fi 
    # [END tf-plan]
    
    # [START tf-apply]
    - id: 'Terraform Apply'
      name: 'hashicorp/terraform:0.12.28'
      entrypoint: 'sh'
      args: 
      - '-c'
      - | 
          if [ -d "environments/$BRANCH_NAME/" ]; then
            cd environments/$BRANCH_NAME      
            terraform apply -auto-approve -var "container_image=gcr.io/$PROJECT_ID/call_sim_frontend:$COMMIT_SHA" -var "project=$PROJECT_ID"
          else
            echo "***************************** SKIPPING APPLYING *******************************"
            echo "Branch '$BRANCH_NAME' does not represent an official environment."
            echo "*******************************************************************************"
          fi
    # [END tf-apply]      
    